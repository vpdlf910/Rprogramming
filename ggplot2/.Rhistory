getwd()
movies <- read.csv("Movie Ratings.csv")
movies <- read.csv("P2-Movie-Ratings.csv")
head(movies)
colnames(movies) <- c("Film", "Genre","CriticRating", "AudienceRating",
"BudgetMillions","Year")
head(movies)
tail(movies)
str(movies)
summary(movies)
summary(movies)
factor(Movies$Year)
factor(movies$Year)
movies$Year <- factor(movies$Year)
summary(movies)
str(movies)
library(ggplot2)
ggplot(data= movies, aes())
ggplot(data= movies, aes(x=CriticRating,y=AudienceRating))
ggplot(data= movies, aes(x=CriticRating,y=AudienceRating))+ geom_point()
ggplot(data= movies, aes(x=CriticRating,y=AudienceRating, colour = Genre))+ geom_point()
ggplot(data= movies, aes(x=CriticRating,y=AudienceRating,
colour = Genre, size = Genre))+ geom_point()
ggplot(data= movies, aes(x=CriticRating,y=AudienceRating,
colour = Genre, size = BudgetMillions))+ geom_point()
p<-ggplot(data= movies, aes(x=CriticRating,y=AudienceRating,
colour = Genre, size = BudgetMillions))
p
View(p)
p + geom_point()
#lines
p+ geom_line()
#multiple layers
p + geom_point() + geom_line()
p + geom_line() + geom_point()
q <- ggplot(data = movies, aes(x= CriticRating, y = AudienceRating, colour= Genre
size = BudgetMillions))
q <- ggplot(data = movies, aes(x= CriticRating, y = AudienceRating, colour= Genre
,size = BudgetMillions))
q + geom_point()
q + geom_point(aes(size= CriticRating))
#ex2
q +  geom_point(aes(colour = BudgetMillions))
q+ geom_point()
#ex3
q + geom_point(aes(x = BudgetMillions))
#overriding을 할지라고 기존의 x를 유지하고 있지만 내용물은 달라진다.
q + geom_point(aes(x = BudgetMillions)) + xlab("Budget Millions $$$")
q + geom_line() + geom_point()
#reduce line size
q + geom_line(size = 1) + geom_point()
r + geom_point()
#------------------------------ Mapping vs Setting
r <- ggplot(data = movies, aes(x=CriticRating, y = AudienceRating))
r + geom_point()
#Add colour
#1. Mapping( what we' ve done so far):
r + geom_point(aes(colour = Genre))
#2. Setting:
r + geom_point(colour = "DarkGreen")
#ERROR:
r + geom_point(aes(colour = "DarkGreen")
#ERROR:
r + geom_point(aes(colour = "DarkGreen"))
#1. Mapping
r + geom_point(aes(size = BudgetMillions))
#2. Setting
r + geom_point(size=10)
r + geom_point(aes(size=10))
#ERROR:
r + geom_point(aes(size=10))
s <- geom_histogram(binwidth = 10)
s <- ggplot(data = movies, aes(x=BudgetMillions))
s <- geom_histogram(binwidth = 10)
s <- ggplot(data = movies, aes(x=BudgetMillions))
s + geom_histogram(binwidth = 10)
#add colour
s + geom_histogram(binwidth = 10, aes(fill=Genre))
#add a border
s + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
#cometimes you may need density charts:
s + geom_density()
#cometimes you may need density charts:
s + geom_density(aes(fill=Genre))
s + geom_density(aes(fill=Genre), position='stack')
t <- ggplot(data = movies , aes(x=AudienceRating))
t + geom_histogram(binwidth=10,)
t + geom_histogram(binwidth=10,
fill= "White", colour="Blue")
#another way:
t<- ggplot(data= movies)
t + geom_histogram(binwidth=10, aes(x=AudienceRating),
fill= "White", colour="Blue")
#이 방법을 통해서 x에 들어갈 column을 유연하게 지정할 수 있다.
#>>> 4
t + geom_histogram(binwidth=10, aes(x=CriticRating),
fill= "White", colour="Blue")
#>>> 5
t <- ggplot()
?geom_smooth
u + geom_point() + geom_smooth()
u <- ggplot(data= movies, aes(x=CriticRating, y=AudienceRating,
colour= Genre))
u + geom_point() + geom_smooth()
u + geom_point() + geom_smooth(fill=NA)
#boxplots
u <- ggplot(data=movies, aes(x=Genre), y=AudienceRating,
colour = Genre)
u + geom_boxplot()
#boxplots
u <- ggplot(data=movies, aes(x=Genre, y=AudienceRating,
colour = Genre))
u + geom_boxplot()
u + geom_boxplot(size = 1.2)
u + geom_boxplot(size = 1.2) + geom_point()
#tips / hack:
u + geom_boxplot(size = 1.2) + geom_gitter()
#tips / hack:
u + geom_boxplot(size = 1.2) + geom_jitter()
#another way:
u + geom_jitter() + geom_boxplot(size=1.2, alpha= 0.5)
u <-ggplot(data=movies, aes(x=Genre, y=CriticRating,
colour = Genre))
u + geom_boxplot()
u + geom_boxplot(size=1.2)
u + geom_boxplot(size=1.2) + geom_jitter()
v <- geom_histogram(binwidth = 10)
v <- ggplot(data= movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth = 10)
v + geom_histogram(binwidth = 10,aes(fill=Genre))
v + geom_histogram(binwidth = 10,aes(fill=Genre),
colour = "Black")
#facets
v + geom_histogram(binwidth = 10,aes(fill=Genre),
colour = "Black") +
facet_grid(Genre~.)
#facets
v + geom_histogram(binwidth = 10,aes(fill=Genre),
colour = "Black") +
facet_grid(Genre~., scales = "free")
#scatterplots:
w <- ggplot(data= movies, aes(x=CriticRating, y= AudienceRating),
colour = Genre)
w + geom_point(size=3)
w + geom_point(size=3)+ facet_grid(Genre~.)
#scatterplots:
w <- ggplot(data= movies, aes(x=CriticRating, y= AudienceRating),
colour = Genre)
w + geom_point(size=3)
#scatterplots:
w <- ggplot(data= movies, aes(x=CriticRating, y= AudienceRating,
colour = Genre))
w + geom_point(size=3)
w + geom_point(size=3)+ facet_grid(Genre~.)
w + geom_point(size=3)+ facet_grid(.~Year)
w + geom_point(size=3)+ facet_grid(Genre~Year)
w + geom_point(size=3)+ facet_grid(Genre~Year) + geom_smooth()
w + geom_point(aes(size(BudgetMillions)))+ facet_grid(Genre~Year)+ geom_smooth()
w + geom_point(aes(size=BudgetMillions))+ facet_grid(Genre~Year)+ geom_smooth()
m <- ggplot(data = movies, aes(x=CriticRating, y=AudienceRating,
size= BudgetMillions,
colour = Genre))
m + geom_point()
m + geom_point() +
xlim(50,100)
m + geom_point() +
xlim(50,100) +
ylim(50,100)
#won't work well always
n <- ggplot(data=movies, aes(x=BudgetMillions))
n + geom_histogram(binwidth=10, aes(fill=Genre),colour= "Black")
n + geom_histogram(binwidth=10, aes(fill=Genre),colour= "Black")+
ylim(50,100)
n + geom_histogram(binwidth=10, aes(fill=Genre),colour= "Black")+
ylim(0,50)
#실제로 데이터를 확대하는 것이 아닌 삭제하는 것이다.
n + geom_histogram(binwidth=10, aes(fill=Genre),colour= "Black")
#실제로 데이터를 확대하는 것이 아닌 삭제하는 것이다.
n + geom_histogram(binwidth=10, aes(fill=Genre),colour= "Black")+
coord_cartesian(ylim = c(0,50))
#improve #1:
w + geom_point(aes(size=BudgetMillions))+
facet_grid(Genre~Year)+
geom_smooth() +
coord_cartesian(ylim=c(0,100))
#-------------------------- Theme
o <- ggplot(data = movies, aes(x=BudgetMillions))
o + geom_histogram(binwidth = 10, aes(fill=Genre),colour="Black")
h <- o + geom_histogram(binwidth = 10, aes(fill=Genre),colour="Black")
#axis labels
h + xlab("Money Axis")
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour = "Red", size=30))
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20))
?theme
#legend formatting
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title= element_text(size=30),
legend.text = element_text(size=20))
#legend formatting
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title= element_text(size=30),
legend.text = element_text(size=20),
legend.position= c(1.1))
#legend formatting
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title= element_text(size=30),
legend.text = element_text(size=20),
legend.position= c(1.1),
legend.justification = c(1,1))
#legend formatting
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title= element_text(size=30),
legend.text = element_text(size=20),
legend.position= c(1,1),
legend.justification = c(1,1))
#title
h + xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution")+
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title= element_text(size=30),
legend.text = element_text(size=20),
legend.position= c(1,1),
legend.justification = c(1,1))
#title
h + xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution")+
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title= element_text(size=30),
legend.text = element_text(size=20),
legend.position= c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour= "DarkBlue",
size=40,
family="Courier"))
homework <- read.csv("P2-Section6-Homework-Data/Section6-Homework-Data.csv")
homework <- read.csv("P2-Section6-Homework-Data/Section6-Homework-Data.csv")
homework
head(homework)
tail(homework)
head(homework)
tail(homework)
head(homework)
str(homework)
summary(homework)
library(ggplot2)
m <- ggplot(data=homework, aes(x=Genre, y=Gross% US, colour =Studio, size=Budget $M))
summary(homework)
str(homework)
View(homework)
#>gross % US
#>Genre을 표시하여 박스 그래프로 표시하라 점의 크기는 budget$M으로 표시 색깔은 Studio로 표시
homeworkF <- data.frame(Genre = homework$Genre, Studio= homework$Studio,
Gross%US= homework$Gross...US,Budget$M = homework$Budget...mill)
#>gross % US
#>Genre을 표시하여 박스 그래프로 표시하라 점의 크기는 budget$M으로 표시 색깔은 Studio로 표시
homeworkF <- data.frame(Genre = homework$Genre, Studio= homework$Studio,
Gross%US= homework$Gross...US,Budget = homework$Budget...mill)
#>gross % US
#>Genre을 표시하여 박스 그래프로 표시하라 점의 크기는 budget$M으로 표시 색깔은 Studio로 표시
homeworkF <- data.frame(Genre = homework$Genre) #Studio= homework$Studio,
#>gross % US
#>Genre을 표시하여 박스 그래프로 표시하라 점의 크기는 budget$M으로 표시 색깔은 Studio로 표시
homeworkF <- data.frame(Genre = homework$Genre, Studio= homework$Studio)
#>gross % US
#>Genre을 표시하여 박스 그래프로 표시하라 점의 크기는 budget$M으로 표시 색깔은 Studio로 표시
homeworkF <- data.frame(Genre = homework$Genre, Studio= homework$Studio,
Gross%US= homework$Gross...US)#Budget = homework$Budget...mill)
#>gross % US
#>Genre을 표시하여 박스 그래프로 표시하라 점의 크기는 budget$M으로 표시 색깔은 Studio로 표시
homeworkF <- data.frame(Genre = homework$Genre, Studio= homework$Studio,
Gross= homework$Gross...US,Budget = homework$Budget...mill)
m <- ggplot(data=homework, aes(x=Genre, y=Gross, colour =Studio, size=Budget))
m + geom_boxplot()
m <- ggplot(data=homeworkF, aes(x=Genre, y=Gross, colour =Studio, size=Budget))
m + geom_boxplot()
homeworkF <- homeworkF$Studio["Buena Vista Studios","Fox","Paramount Pictures","Sony","Universal","WB"]
homeworkF <- homeworkF[homeworkF$Studio==c("Buena Vista Studios","Fox","Paramount Pictures","Sony","Universal","WB"),]
homeworkF[homeworkF$Studio==c("Buena Vista Studios","Fox","Paramount Pictures","Sony","Universal","WB"),]
homeworkF <- homeworkF[homeworkF$Studio==c("Buena Vista Studios","Fox","Paramount Pictures","Sony","Universal","WB"),]
home <- homeworkF[homeworkF$Studio==c("Buena Vista Studios","Fox","Paramount Pictures","Sony","Universal","WB"),]
homeworkF[homeworkF$Studio==c("Buena Vista Studios","Fox","Paramount Pictures","Sony","Universal","WB"),]
#>gross % US
#>Genre을 표시하여 박스 그래프로 표시하라 점의 크기는 budget$M으로 표시 색깔은 Studio로 표시
homeworkF <- data.frame(Genre = homework$Genre, Studio= homework$Studio,
Gross= homework$Gross...US,Budget = homework$Budget...mill)
home <- homeworkF[homeworkF$Studio==c("Buena Vista Studios","Fox","Paramount Pictures","Sony","Universal","WB"),]
homeworkF[homeworkF$Studio==c("Buena Vista Studios","Fox","Paramount Pictures","Sony","Universal","WB"),]
#>gross % US
#>Genre을 표시하여 박스 그래프로 표시하라 점의 크기는 budget$M으로 표시 색깔은 Studio로 표시
homeworkF <- data.frame(Genre = homework$Genre, Studio= homework$Studio,
Gross= homework$Gross...US,Budget = homework$Budget...mill)
homeworkF[homeworkF$Studio==c("Buena Vista Studios","Fox","Paramount Pictures","Sony","Universal","WB"),]
m <- ggplot(data=home, aes(x=Genre, y=Gross, colour =Studio, size=Budget))
m + geom_boxplot()
home
str(home)
summary(home)
factor(home$Budget)
m <- ggplot(data=home, aes(x=Genre, y=Gross, colour =Studio, size=Budget))
m + geom_boxplot()
home$Budget <- factor(home$Budget)
m <- ggplot(data=home, aes(x=Genre, y=Gross, colour =Studio, size=Budget))
m + geom_boxplot()
